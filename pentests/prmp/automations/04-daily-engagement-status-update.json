{
  "metadata": {
    "type": "automation-workflow",
    "version": 1,
    "exportedAt": "2025-10-08T00:00:00.000Z"
  },
  "workflow": {
    "tool": 1,
    "name": "Daily Engagement Status Update",
    "module": 2,
    "role": null,
    "searchQuery": "id!=0",
    "instructions": null,
    "weightage": 0,
    "ignoreWeightage": true,
    "hooks": {
      "adhoc": true
    },
    "triggers": {
      "slack": {
        "template": "ðŸ“Š Daily Status ({{today}}):\n\nNew: {{new_today}} | Active: {{active_total}} | Resolved: {{resolved_today}}\n\nðŸ”´ Critical: {{critical}} | ðŸŸ  High: {{high}} | ðŸŸ¡ Medium: {{medium}}\n\nTop assets: {% for a in top_assets %}{{a.assetName}} ({{a.total}}){% if not forloop.last %}, {% endif %}{% endfor %}",
        "webhook_url": "https://hooks.slack.com/services/REPLACE/ME/WEBHOOK",
        "all_possible_pipeline_keys": null
      },
      "email": {
        "email_type": "smtp_email",
        "to": ["stakeholders@example.com"],
        "cc": ["pentest-team@example.com"],
        "subject": "Daily Engagement Status: {{today}}",
        "body": "Daily Engagement Status Update\n\nDate: {{today}}\n\nFindings Summary:\n- New findings today: {{new_today}}\n- Active findings: {{active_total}}\n- Resolved today: {{resolved_today}}\n\nBy Severity:\n- Critical: {{critical}}\n- High: {{high}}\n- Medium: {{medium}}\n- Low: {{low}}\n\nTop Affected Assets:\n{% for a in top_assets %}{{forloop.counter}}. {{a.assetName}}: {{a.total}} findings\n{% endfor %}\n\nPlease review and prioritize remediation activities.",
        "all_possible_pipeline_keys": null
      },
      "workflow_mode": 2,
      "all_possible_pipeline_keys": ["today", "new_today", "resolved_today", "active_total", "critical", "high", "medium", "low", "top_assets"]
    },
    "workflowMode": 2,
    "scheduleTime": "09:00",
    "scheduleFrequency": 1,
    "scheduleDayOfWeek": null,
    "timezone": "UTC",
    "llmModel": 0,
    "pipelineCode": "def run_pipeline(queryset):\n    today = datetime.datetime.now().date().isoformat()\n    new_q = f'(created>={today})'\n    resolved_q = f'(updated>={today}) and (state=2)'\n    new_today = count_qs(queryset, new_q)\n    resolved_today = count_qs(queryset, resolved_q)\n    active_total = count_qs(queryset, '(state in (0,1,5))')\n    critical = count_qs(queryset, '(severity=5) and (state in (0,1,5))')\n    high = count_qs(queryset, '(severity=4) and (state in (0,1,5))')\n    medium = count_qs(queryset, '(severity=3) and (state in (0,1,5))')\n    low = count_qs(queryset, '(severity in (1,2)) and (state in (0,1,5))')\n    top_assets = group_qs(queryset, 'asset__name', max_groups=5, search_query='(state in (0,1,5))', field_alias={'asset__name':'assetName'})\n    return {'today': today, 'new_today': new_today, 'resolved_today': resolved_today, 'active_total': active_total, 'critical': critical, 'high': high, 'medium': medium, 'low': low, 'top_assets': top_assets}",
    "credentialManagerId": null,
    "documents": [],
    "documentIds": []
  }
}

