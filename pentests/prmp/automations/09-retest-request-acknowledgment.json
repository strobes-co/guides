{
  "metadata": {
    "type": "automation-workflow",
    "version": 1,
    "exportedAt": "2025-10-08T00:00:00.000Z"
  },
  "workflow": {
    "tool": 1,
    "name": "Retest Request Acknowledgment",
    "module": 2,
    "role": null,
    "searchQuery": "state=2",
    "instructions": null,
    "weightage": 0,
    "ignoreWeightage": false,
    "hooks": {
      "adhoc": true,
      "on_bug_state_update": true
    },
    "triggers": {
      "finding_custom_field": {
        "field_slug": "retest_status",
        "field_value": "Pending Retest"
      },
      "comment": "This finding has been marked as Resolved and is now queued for retesting.\n\nRetest Checklist:\n- [ ] Verify fix is deployed to production\n- [ ] Confirm configuration changes applied\n- [ ] Validate remediation steps\n- [ ] Retest and document results\n\nExpected retest completion: 3-5 business days",
      "email": {
        "email_type": "smtp_email",
        "to": ["pentest-team@example.com"],
        "cc": ["asset-owners@example.com"],
        "subject": "Retest Required: {{title}}",
        "body": "Retest Request\n\nFinding: {{title}}\nAsset: {{asset_name}}\nSeverity: {{severity_label}}\nResolved Date: {{today}}\n\nThe finding has been marked as Resolved by the development team.\n\nRetest Requirements:\n1. Verify the fix has been deployed to production\n2. Validate that the vulnerability no longer exists\n3. Test edge cases and variations\n4. Document findings and update ticket\n\nPlease schedule retest within 3-5 business days.\n\nStrobes Finding ID: {{id}}",
        "all_possible_pipeline_keys": null
      },
      "slack": {
        "template": "ðŸ”„ Retest requested: {{title}} on {{asset_name}} ({{severity_label}})",
        "webhook_url": "https://hooks.slack.com/services/REPLACE/ME/WEBHOOK",
        "all_possible_pipeline_keys": null
      },
      "workflow_mode": 1,
      "all_possible_pipeline_keys": ["id", "title", "asset_name", "severity_label", "today"]
    },
    "workflowMode": 1,
    "scheduleTime": null,
    "scheduleFrequency": 1,
    "scheduleDayOfWeek": null,
    "timezone": null,
    "llmModel": 0,
    "pipelineCode": "def run_pipeline(obj):\n    sev_map={1:'Info',2:'Low',3:'Medium',4:'High',5:'Critical'}\n    asset_name = getattr(getattr(obj, 'asset', None), 'name', '')\n    today = datetime.datetime.now().date().isoformat()\n    return {'id': obj.id, 'title': obj.title, 'asset_name': asset_name, 'severity_label': sev_map.get(obj.severity, str(obj.severity)), 'today': today}",
    "credentialManagerId": null,
    "documents": [],
    "documentIds": []
  }
}

