{
  "metadata": {
    "type": "automation-workflow",
    "version": 1,
    "exportedAt": "2025-10-08T00:00:00.000Z"
  },
  "workflow": {
    "tool": 1,
    "name": "SLA Watch & Escalation",
    "module": 2,
    "role": null,
    "searchQuery": "state in (0,1,5)",
    "instructions": null,
    "weightage": 0,
    "ignoreWeightage": true,
    "hooks": {
      "adhoc": true
    },
    "triggers": {
      "finding_custom_field": {
        "field_slug": "sla_status",
        "field_value": "{{sla_status}}"
      },
      "slack": {
        "template": "⏰ SLA Watch ({{today}}):\n\nDue soon (3 days): {{due_soon}}\nOverdue: {{overdue}}\n\nTop overdue assets:\n{% for a in top_overdue %}{{a.assetName}} ({{a.total}}){% if not forloop.last %}\n{% endif %}{% endfor %}",
        "webhook_url": "https://hooks.slack.com/services/REPLACE/ME/WEBHOOK",
        "all_possible_pipeline_keys": null
      },
      "email": {
        "email_type": "smtp_email",
        "to": ["management@example.com", "asset-owners@example.com"],
        "cc": ["pentest-team@example.com"],
        "subject": "SLA ESCALATION: {{overdue}} Overdue, {{due_soon}} Due Soon",
        "body": "SLA Watch & Escalation Report\n\nDate: {{today}}\n\nFindings due soon (≤3 days): {{due_soon}}\nOverdue findings: {{overdue}}\n\nTop Assets with Overdue Findings:\n{% for a in top_overdue %}{{forloop.counter}}. {{a.assetName}}: {{a.total}} overdue\n{% endfor %}\n\nBy Severity (Overdue):\n- Critical: {{overdue_critical}}\n- High: {{overdue_high}}\n- Medium: {{overdue_medium}}\n\nImmediate action required on overdue items.\nPlease review and expedite remediation.",
        "all_possible_pipeline_keys": null
      },
      "workflow_mode": 2
    },
    "workflowMode": 2,
    "scheduleTime": "08:00",
    "scheduleFrequency": 1,
    "scheduleDayOfWeek": null,
    "timezone": "UTC",
    "llmModel": 0,
    "pipelineCode": "def run_pipeline(queryset):\n    today = datetime.datetime.now().date().isoformat()\n    target = (datetime.datetime.now().date() + timedelta(days=3)).isoformat()\n    base = '(state in (0,1,5))'\n    due_soon_q = f\"{base} and (due_date>={today}) and (due_date<={target})\"\n    overdue_q = f\"{base} and (due_date<{today})\"\n    due_soon = count_qs(queryset, due_soon_q)\n    overdue = count_qs(queryset, overdue_q)\n    overdue_critical = count_qs(queryset, f'{overdue_q} and (severity=5)')\n    overdue_high = count_qs(queryset, f'{overdue_q} and (severity=4)')\n    overdue_medium = count_qs(queryset, f'{overdue_q} and (severity=3)')\n    top_overdue = group_qs(queryset, 'asset__name', max_groups=5, search_query=overdue_q, field_alias={'asset__name':'assetName'})\n    sla_status = 'On Track' if overdue == 0 else 'Escalated'\n    return {'today': today, 'due_soon': due_soon, 'overdue': overdue, 'overdue_critical': overdue_critical, 'overdue_high': overdue_high, 'overdue_medium': overdue_medium, 'top_overdue': top_overdue, 'sla_status': sla_status}",
    "credentialManagerId": null,
    "documents": [],
    "documentIds": []
  }
}

