{
  "metadata": {
    "type": "automation-workflow",
    "version": 1,
    "exportedAt": "2025-10-08T00:00:00.000Z"
  },
  "workflow": {
    "tool": 1,
    "name": "Finding State Change Notification",
    "module": 2,
    "role": null,
    "searchQuery": "id!=0",
    "instructions": null,
    "weightage": 0,
    "ignoreWeightage": false,
    "hooks": {
      "adhoc": true,
      "on_bug_state_update": true
    },
    "triggers": {
      "slack": {
        "template": "{{state_icon}} State changed: {{title}} on {{asset_name}}\n{{old_state}} ‚Üí {{new_state}} ({{severity_label}})",
        "webhook_url": "https://hooks.slack.com/services/REPLACE/ME/WEBHOOK",
        "all_possible_pipeline_keys": null
      },
      "email": {
        "email_type": "smtp_email",
        "to": ["stakeholders@example.com"],
        "cc": [],
        "subject": "State Changed: {{title}} ({{old_state}} ‚Üí {{new_state}})",
        "body": "Finding State Update\n\nFinding: {{title}}\nAsset: {{asset_name}}\nSeverity: {{severity_label}}\n\nState Change: {{old_state}} ‚Üí {{new_state}}\n\n{{action_message}}\n\nStrobes Finding ID: {{id}}",
        "all_possible_pipeline_keys": null
      },
      "workflow_mode": 1
    },
    "workflowMode": 1,
    "scheduleTime": null,
    "scheduleFrequency": 1,
    "scheduleDayOfWeek": null,
    "timezone": null,
    "llmModel": 0,
    "pipelineCode": "def run_pipeline(obj):\n    sev_map={1:'Info',2:'Low',3:'Medium',4:'High',5:'Critical'}\n    state_map={0:'New',1:'Active',2:'Resolved',3:'Duplicate',4:'Not Applicable',5:'Committed',6:'Accepted Risk',7:\"Won't Fix\"}\n    asset_name = getattr(getattr(obj, 'asset', None), 'name', '')\n    old_state_val = getattr(obj, '_initial_state', obj.state)\n    new_state_val = obj.state\n    old_state = state_map.get(old_state_val, str(old_state_val))\n    new_state = state_map.get(new_state_val, str(new_state_val))\n    if new_state_val == 2:\n        state_icon = '‚úÖ'\n        action_message = 'Great! This finding has been resolved. Please verify the fix and close if confirmed.'\n    elif new_state_val == 1:\n        state_icon = 'üîÑ'\n        action_message = 'Finding is now active and under remediation. Please track progress.'\n    elif getattr(obj, 'is_reopened', False):\n        state_icon = 'üî¥'\n        action_message = 'ALERT: This finding has been reopened. Immediate attention required.'\n    else:\n        state_icon = '‚ÑπÔ∏è'\n        action_message = 'State has been updated. Please review and take appropriate action.'\n    return {'id': obj.id, 'title': obj.title, 'asset_name': asset_name, 'severity_label': sev_map.get(obj.severity, str(obj.severity)), 'old_state': old_state, 'new_state': new_state, 'state_icon': state_icon, 'action_message': action_message}",
    "credentialManagerId": null,
    "documents": [],
    "documentIds": []
  }
}

