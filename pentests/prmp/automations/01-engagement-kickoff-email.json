{
  "metadata": {
    "type": "automation-workflow",
    "version": 1,
    "exportedAt": "2025-10-08T00:00:00.000Z"
  },
  "workflow": {
    "tool": 1,
    "name": "Engagement Kickoff Email",
    "module": 3,
    "role": null,
    "searchQuery": "id!=0",
    "instructions": null,
    "weightage": 0,
    "ignoreWeightage": true,
    "hooks": {
      "adhoc": true,
      "on_engagement_create": true
    },
    "triggers": {
      "slack": {
        "template": "ðŸš€ New engagement started: {{name}}\nType: {{engagement_type}} | Timeline: {{start_date}} to {{end_date}}\nLet's kick off!",
        "webhook_url": "https://hooks.slack.com/services/REPLACE/ME/WEBHOOK",
        "all_possible_pipeline_keys": null
      },
      "email": {
        "email_type": "smtp_email",
        "to": ["stakeholders@example.com", "pentest-team@example.com"],
        "cc": ["pm@example.com"],
        "subject": "Engagement Kickoff: {{name}}",
        "body": "Hello Team,\n\nWe are excited to kick off the following security engagement:\n\nEngagement: {{name}}\nType: {{engagement_type}}\nStart Date: {{start_date}}\nEnd Date: {{end_date}}\n\nScope:\n- Testing methodology and approach will be shared in kickoff meeting\n- Communication channels: Slack channel #{{slack_channel}}\n- Daily standups at 10 AM\n\nNext Steps:\n1. Stakeholders: Please provide access to in-scope assets\n2. Complete authorization and NDA if not done\n3. Schedule kickoff call within 48 hours\n\nSLAs:\n- Critical findings: Report within 4 hours\n- High findings: Report within 24 hours\n- Daily status updates via Slack\n\nPoint of Contact: {{poc_email}}\n\nLooking forward to working together!",
        "all_possible_pipeline_keys": null
      },
      "workflow_mode": 1
    },
    "workflowMode": 1,
    "scheduleTime": null,
    "scheduleFrequency": 1,
    "scheduleDayOfWeek": null,
    "timezone": null,
    "llmModel": 0,
    "pipelineCode": "def run_pipeline(obj):\n    eng_type = str(getattr(obj, 'engagement_type', 'Penetration Test'))\n    start = getattr(obj, 'start_date', None)\n    end = getattr(obj, 'end_date', None)\n    start_str = start.isoformat() if start else 'TBD'\n    end_str = end.isoformat() if end else 'TBD'\n    return {'id': obj.id, 'name': obj.name, 'engagement_type': eng_type, 'start_date': start_str, 'end_date': end_str, 'slack_channel': 'eng-' + str(obj.id)[:8], 'poc_email': 'security@example.com'}",
    "credentialManagerId": null,
    "documents": [],
    "documentIds": []
  }
}

