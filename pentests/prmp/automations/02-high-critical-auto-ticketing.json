{
  "metadata": {
    "type": "automation-workflow",
    "version": 1,
    "exportedAt": "2025-10-08T00:00:00.000Z"
  },
  "workflow": {
    "tool": 1,
    "name": "High/Critical Auto-Ticketing to Jira",
    "module": 2,
    "role": null,
    "searchQuery": "severity in (4,5) and state in (0,1)",
    "instructions": null,
    "weightage": 0,
    "ignoreWeightage": false,
    "hooks": {
      "adhoc": true,
      "on_bug_create": true
    },
    "triggers": {
      "jira": {
        "project_key": "SEC",
        "issue_type": "Bug",
        "summary": "[{{severity_label}}] {{title}}",
        "description": "Security Finding Detected\n\nSeverity: {{severity_label}}\nAsset: {{asset_name}}\nState: {{state_label}}\n\nDescription:\n{{description}}\n\nStrobes Finding ID: {{id}}\nDirect Link: [View in Strobes]",
        "priority": "{{jira_priority}}",
        "labels": ["security", "{{severity_label_lower}}", "strobes-auto"],
        "custom_fields": {}
      },
      "comment": {
        "comment": "Jira ticket created automatically: {{jira_ticket_key}}\n\nThis finding requires immediate attention. Please review and begin remediation planning.",
        "is_internal": false
      },
      "slack": {
        "template": "ðŸŽ« Jira ticket created: {{jira_ticket_key}} for {{severity_label}} finding on {{asset_name}}",
        "webhook_url": "https://hooks.slack.com/services/REPLACE/ME/WEBHOOK",
        "all_possible_pipeline_keys": null
      },
      "workflow_mode": 1
    },
    "workflowMode": 1,
    "scheduleTime": null,
    "scheduleFrequency": 1,
    "scheduleDayOfWeek": null,
    "timezone": null,
    "llmModel": 0,
    "pipelineCode": "def run_pipeline(obj):\n    sev_map={1:'Info',2:'Low',3:'Medium',4:'High',5:'Critical'}\n    state_map={0:'New',1:'Active',2:'Resolved',3:'Duplicate',4:'Not Applicable',5:'Committed',6:'Accepted Risk',7:\"Won't Fix\"}\n    jira_priority_map={5:'Highest',4:'High',3:'Medium',2:'Low',1:'Lowest'}\n    asset_name = getattr(getattr(obj, 'asset', None), 'name', '')\n    description = str(getattr(obj, 'description', ''))[:500]\n    sev_label = sev_map.get(obj.severity, str(obj.severity))\n    return {'id': obj.id, 'title': obj.title, 'asset_name': asset_name, 'severity_label': sev_label, 'severity_label_lower': sev_label.lower(), 'state_label': state_map.get(obj.state, str(obj.state)), 'description': description, 'jira_priority': jira_priority_map.get(obj.severity, 'Medium'), 'jira_ticket_key': 'SEC-XXX'}",
    "credentialManagerId": null,
    "documents": [],
    "documentIds": []
  }
}

